{"version":3,"sources":["components/layout/Grid.js","pages/LoginPage.js","pages/RegisterPage.js","types/types.js","actions/note.js","reducers/notesReducer.js","reducers/uiReducer.js","context/UiContext.js","context/NoteContext.js","components/layout/Wrapper.js","components/ui/SearchBox.js","components/layout/Header.js","actions/ui.js","components/ui/Button.js","components/ui/Tabs.js","components/ui/Navbar.js","components/ui/Modal.js","components/layout/Col.js","helpers/formatDate.js","components/ui/Checkbox.js","components/ui/Popup.js","components/notes/Note.js","components/notes/NotesGrid.js","components/ui/ProgressBar.js","components/notes/AnyNotes.js","components/ui/Input.js","components/ui/Select.js","components/ui/TextArea.js","components/notes/NoteForm.js","components/notes/Notes.js","pages/NotesPage.js","components/routers/AppRouter.js","App.js","reportWebVitals.js","index.js"],"names":["Grid","children","stretch","className","LoginPage","action","method","autoComplete","htmlFor","type","id","name","required","to","types","NOTE_ADD","NOTE_UPDATE","NOTE_COMPLETE","NOTE_DELETE","NOTE_SET_ACTIVE","NOTE_SET_COMPLETED","NOTE_SET_DISPLAYED","NOTE_SEARCH","UI_SET_IS_MODAL_OPEN","UI_SET_CURRENT_TAB","setActiveNote","payload","setDisplayedNotes","category","initState","notes","displayedNotes","activeNote","completedNotes","notesReducer","state","map","note","completed","updatedAt","filter","find","newNotes","length","q","match","title","toLowerCase","includes","categoryMatch","uiReducer","isModalOpen","currentTab","initialState","UiContext","createContext","UiProvider","useReducer","uiState","uiDispatch","Provider","value","NoteContext","NoteProvider","notesState","notesDispatch","useContext","useEffect","Wrapper","SearchBox","useState","search","setSearch","onSubmit","e","preventDefault","trim","aria-label","size","color","placeholder","onChange","target","Header","setIsModalOpen","isOpen","Button","textTransform","onClick","tabs","Tabs","handleClick","tab","dataset","setCurrentTab","role","data-tab","Navbar","Modal","props","open","classList","contains","Col","breakpoints","xs","sm","md","lg","span","push","toString","replaceAll","responsive","months","formatDate","date","Date","month","getMonth","day","getDate","year","getFullYear","Checkbox","label","checked","xmlns","viewBox","aria-hidden","focusable","fill","stroke","strokeWidth","d","Popup","setPopupShowing","Note","description","isPopupShowing","data-id","completeNote","NotesGrid","ProgressBar","progress","style","width","imgsPath","noNotes","noFilterNotes","AnyNotes","imgPath","src","alt","Input","setNote","autoFocus","tabIndex","prevNote","Select","options","selectHeader","text","selectOption","setSelectOption","selectRef","useRef","toggleSelect","current","toggle","ref","onBlur","remove","onKeyPress","key","data-value","handleSelectChange","TextArea","initialNote","NoteForm","closeModal","nanoid","updateNote","addNote","Notes","totalNotes","areNotes","areDisplayedNotes","confirmBtn","cancelBtn","confirmBtnText","NotesPage","AppRouter","basename","path","exact","RegisterPage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f24474e3.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Grid({ children, stretch }) {\n\treturn (\n\t\t<div className={`grid ${stretch ? 'grid--stretch' : ''}`}>\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n\nexport default Grid;\n","import React from 'react';\nimport Grid from '../components/layout/Grid';\nimport '../auth.css';\nimport { Link } from 'react-router-dom';\n\nfunction LoginPage() {\n\treturn (\n\t\t<div className=\"auth__page\">\n\t\t\t<div className=\"auth__form-wrapper\">\n\t\t\t\t<form\n\t\t\t\t\taction=\"/signin\"\n\t\t\t\t\tmethod=\"POST\"\n\t\t\t\t\tclassName=\"auth__form\"\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t>\n\t\t\t\t\t<h1 className=\"text-center\">Welcome Back</h1>\n\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t<label className=\"form-label\" htmlFor=\"email\">\n\t\t\t\t\t\t\tEmail address\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t<label className=\"form-label\" htmlFor=\"password\">\n\t\t\t\t\t\t\tPassword\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Grid>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tclassName=\"btn btn--primary mt-2 col--12\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<p className=\"auth__bottom-text\">\n\t\t\t\t\t\tDon't have an account?\n\t\t\t\t\t\t<Link to=\"/signup\">Create one for free</Link>\n\t\t\t\t\t</p>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport Grid from '../components/layout/Grid';\nimport '../auth.css';\nimport { Link } from 'react-router-dom';\n\nfunction LoginPage() {\n\treturn (\n\t\t<div className=\"auth__page\">\n\t\t\t<div className=\"auth__form-wrapper\">\n\t\t\t\t<form\n\t\t\t\t\taction=\"/signup\"\n\t\t\t\t\tmethod=\"POST\"\n\t\t\t\t\tclassName=\"auth__form\"\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t>\n\t\t\t\t\t<h1 className=\"text-center\">Sign Up</h1>\n\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t<label className=\"form-label\" htmlFor=\"email\">\n\t\t\t\t\t\t\tEmail address\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t<label className=\"form-label\" htmlFor=\"password\">\n\t\t\t\t\t\t\tPassword\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Grid>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tclassName=\"btn btn--primary mt-2 col--12\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<p className=\"auth__bottom-text\">\n\t\t\t\t\t\tAlready have an account?\n\t\t\t\t\t\t<Link to=\"/signin\"> Sign in</Link>\n\t\t\t\t\t</p>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default LoginPage;\n","const types = {\n\tNOTE_ADD: 'Add a new note',\n\tNOTE_UPDATE: 'Update a note',\n\tNOTE_COMPLETE: 'Toggle the completed state of a note',\n\tNOTE_DELETE: 'Delete a note',\n\tNOTE_SET_ACTIVE: 'Set active note',\n\tNOTE_SET_COMPLETED: 'Set the number of completed notes',\n\tNOTE_SET_DISPLAYED: 'Set the displayed notes',\n\tNOTE_SEARCH: 'Search notes',\n\tUI_SET_IS_MODAL_OPEN: 'Open the modal',\n\tUI_SET_CURRENT_TAB: 'Set the current tab',\n};\nexport default types;\n","import types from '../types/types';\n\nexport const updateNote = (note) => ({\n\ttype: types.NOTE_UPDATE,\n\tpayload: note,\n});\n\nexport const addNote = (note) => ({\n\ttype: types.NOTE_ADD,\n\tpayload: note,\n});\n\nexport const setActiveNote = (id) => ({\n\ttype: types.NOTE_SET_ACTIVE,\n\tpayload: id,\n});\n\nexport const setCompletedNotes = () => ({\n\ttype: types.NOTE_SET_COMPLETED,\n});\n\nexport const setDisplayedNotes = (category) => ({\n\ttype: types.NOTE_SET_DISPLAYED,\n\tpayload: category,\n});\n\nexport const completeNote = (completed) => ({\n\ttype: types.NOTE_COMPLETE,\n\tpayload: completed,\n});\n\nexport const deleteNote = (id) => ({\n\ttype: types.NOTE_DELETE,\n\tpayload: id,\n});\n\nexport const searchNotes = (q, category) => ({\n\ttype: types.NOTE_SEARCH,\n\tpayload: { q, category },\n});\n","import types from '../types/types';\n\nconst initState = {\n\tnotes: [],\n\tdisplayedNotes: [],\n\tactiveNote: null,\n\tcompletedNotes: 0,\n};\n\nexport const notesReducer = (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase types.NOTE_ADD:\n\t\t\treturn { ...state, notes: [{ ...action.payload }, ...state.notes] };\n\t\tcase types.NOTE_UPDATE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnotes: state.notes.map((note) =>\n\t\t\t\t\tnote.id === action.payload.id ? { ...action.payload } : note\n\t\t\t\t),\n\t\t\t};\n\t\tcase types.NOTE_COMPLETE: {\n\t\t\tconst { id, completed, updatedAt } = action.payload;\n\t\t\tconst notes = state.notes.filter((note) => note.id !== id);\n\t\t\tconst note = state.notes.find((note) => note.id === id);\n\t\t\tnote.updatedAt = updatedAt;\n\t\t\tnote.completed = completed;\n\n\t\t\t// Si la nota está completada lo agrega al final\n\t\t\t// Pero si de un estado completado se marca de nuevo a incompleto\n\t\t\t// Lo modifica pero no lo agrega al final si no que se queda en su misma posición\n\t\t\tconst newNotes = completed\n\t\t\t\t? [...notes, note]\n\t\t\t\t: state.notes.filter((note) =>\n\t\t\t\t\t\tnote.id === id\n\t\t\t\t\t\t\t? { ...note, updatedAt, completed }\n\t\t\t\t\t\t\t: note\n\t\t\t\t  );\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnotes: newNotes,\n\t\t\t\tdisplayedNotes: newNotes,\n\t\t\t};\n\t\t}\n\t\tcase types.NOTE_DELETE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnotes: state.notes.filter((note) => note.id !== action.payload),\n\t\t\t};\n\t\tcase types.NOTE_SET_ACTIVE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactiveNote:\n\t\t\t\t\tstate.displayedNotes.find(\n\t\t\t\t\t\t(note) => note.id === action.payload\n\t\t\t\t\t) || null,\n\t\t\t};\n\t\tcase types.NOTE_SET_COMPLETED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcompletedNotes: state.notes.filter((note) => note.completed)\n\t\t\t\t\t.length,\n\t\t\t};\n\t\tcase types.NOTE_SET_DISPLAYED:\n\t\t\tconst displayedNotes =\n\t\t\t\taction.payload === 'all'\n\t\t\t\t\t? state.notes\n\t\t\t\t\t: state.notes.filter(\n\t\t\t\t\t\t\t(note) => note.category === action.payload\n\t\t\t\t\t  );\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdisplayedNotes,\n\t\t\t};\n\t\tcase types.NOTE_SEARCH: {\n\t\t\tconst { category, q } = action.payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdisplayedNotes: state.notes.filter((note) => {\n\t\t\t\t\tconst match = note.title\n\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t.includes(q.toLowerCase());\n\t\t\t\t\t// Si la categoría es all devuelve todas las notas sin importar su categoría\n\t\t\t\t\tconst categoryMatch =\n\t\t\t\t\t\tcategory === 'all' ? true : note.category === category;\n\n\t\t\t\t\treturn match && categoryMatch;\n\t\t\t\t}),\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import types from '../types/types';\n\n/*\n{\n  isModalOpen: false,\n}\n*/\n\nexport const uiReducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase types.UI_SET_IS_MODAL_OPEN:\n\t\t\treturn { ...state, isModalOpen: action.payload };\n\t\tcase types.UI_SET_CURRENT_TAB:\n\t\t\treturn { ...state, currentTab: action.payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { createContext, useReducer } from 'react';\nimport { uiReducer } from '../reducers/uiReducer';\n\nconst initialState = {\n\tisModalOpen: false,\n\tcurrentTab: 'all',\n};\n\nexport const UiContext = createContext();\n\nexport const UiProvider = ({ children }) => {\n\tconst [uiState, uiDispatch] = useReducer(uiReducer, initialState);\n\n\treturn (\n\t\t<UiContext.Provider value={{ uiState, uiDispatch }}>\n\t\t\t{children}\n\t\t</UiContext.Provider>\n\t);\n};\n","import { createContext, useContext, useEffect, useReducer } from 'react';\nimport { setCompletedNotes, setDisplayedNotes } from '../actions/note';\nimport { notesReducer } from '../reducers/notesReducer';\nimport { UiContext } from './UiContext';\n\nconst initState = {\n\tnotes: [],\n\tdisplayedNotes: [],\n\tactiveNote: null,\n\tcompletedNotes: 0,\n};\n\nexport const NoteContext = createContext();\n\nexport const NoteProvider = ({ children }) => {\n\tconst [notesState, notesDispatch] = useReducer(notesReducer, initState);\n\n\tconst { notes } = notesState;\n\n\tconst {\n\t\tuiState: { currentTab },\n\t} = useContext(UiContext);\n\n\tuseEffect(() => {\n\t\tnotesDispatch(setCompletedNotes());\n\t}, [notes]);\n\n\tuseEffect(() => {\n\t\tnotesDispatch(setDisplayedNotes(currentTab));\n\t}, [notesDispatch, currentTab]);\n\n\treturn (\n\t\t<NoteContext.Provider\n\t\t\tvalue={{\n\t\t\t\tnotesState,\n\t\t\t\tnotesDispatch,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</NoteContext.Provider>\n\t);\n};\n","import React from 'react';\n\nfunction Wrapper({ children }) {\n\treturn <div className=\"wrapper\">{children}</div>;\n}\n\nexport default Wrapper;\n","import React, { useContext, useState } from 'react';\nimport { Search } from 'react-feather';\nimport { searchNotes, setDisplayedNotes } from '../../actions/note';\nimport { NoteContext } from '../../context/NoteContext';\nimport { UiContext } from '../../context/UiContext';\n\nfunction SearchBox() {\n\tconst [search, setSearch] = useState('');\n\n\tconst { notesDispatch } = useContext(NoteContext);\n\tconst { uiState } = useContext(UiContext);\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif (!search.trim()) {\n\t\t\tnotesDispatch(setDisplayedNotes(uiState.currentTab));\n\t\t\treturn;\n\t\t}\n\t\tnotesDispatch(searchNotes(search.trim(), uiState.currentTab));\n\t};\n\n\treturn (\n\t\t<form className=\"search\" onSubmit={handleSubmit}>\n\t\t\t<button\n\t\t\t\ttype=\"submit\"\n\t\t\t\taria-label=\"Search\"\n\t\t\t\ttitle=\"Search\"\n\t\t\t\tclassName=\"search__btn\"\n\t\t\t>\n\t\t\t\t<Search size={20} color=\"currentColor\" />\n\t\t\t</button>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tautoComplete=\"off\"\n\t\t\t\tclassName=\"search__input\"\n\t\t\t\tname=\"search\"\n\t\t\t\taria-label=\"Search notes\"\n\t\t\t\tplaceholder=\"Search notes...\"\n\t\t\t\tvalue={search}\n\t\t\t\tonChange={({ target }) => setSearch(target.value)}\n\t\t\t/>\n\t\t</form>\n\t);\n}\n\nexport default SearchBox;\n","import React from 'react';\nimport Wrapper from './Wrapper';\nimport SearchBox from '../ui/SearchBox';\n\nfunction Header() {\n\treturn (\n\t\t<Wrapper>\n\t\t\t<header className=\"header\">\n\t\t\t\t<SearchBox />\n\t\t\t</header>\n\t\t</Wrapper>\n\t);\n}\n\nexport default Header;\n","import types from '../types/types';\n\nexport const setIsModalOpen = (isOpen) => ({\n\ttype: types.UI_SET_IS_MODAL_OPEN,\n\tpayload: !isOpen,\n});\n\nexport const setCurrentTab = (currentTab) => ({\n\ttype: types.UI_SET_CURRENT_TAB,\n\tpayload: currentTab,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Button({ children, type, textTransform = 'none', onClick }) {\n\treturn (\n\t\t<button\n\t\t\tonClick={onClick}\n\t\t\tclassName={`btn ${\n\t\t\t\ttype ? `btn--${type}` : ''\n\t\t\t} text-${textTransform}`}\n\t\t>\n\t\t\t{children}\n\t\t</button>\n\t);\n}\n\nButton.propTypes = {\n\ttype: PropTypes.string,\n};\n\nexport default Button;\n","import React, { useContext } from 'react';\nimport { setCurrentTab } from '../../actions/ui';\nimport { UiContext } from '../../context/UiContext';\n\nconst tabs = ['home', 'work', 'personal'];\n\nfunction Tabs() {\n\tconst {\n\t\tuiState: { currentTab },\n\t\tuiDispatch,\n\t} = useContext(UiContext);\n\n\tconst handleClick = ({ target }) => {\n\t\tconst { tab } = target.dataset;\n\t\tuiDispatch(setCurrentTab(tab));\n\t};\n\n\treturn (\n\t\t<ul className=\"tab__list\" role=\"tablist\">\n\t\t\t<li\n\t\t\t\tdata-tab=\"all\"\n\t\t\t\tonClick={handleClick}\n\t\t\t\tclassName={`tab__item ${\n\t\t\t\t\tcurrentTab === 'all' ? 'tab__item--active' : ''\n\t\t\t\t}`}\n\t\t\t\trole=\"tab\"\n\t\t\t>\n\t\t\t\tAll\n\t\t\t</li>\n\t\t\t{tabs.map((tab) => (\n\t\t\t\t<li\n\t\t\t\t\tkey={tab}\n\t\t\t\t\tdata-tab={tab}\n\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\tclassName={`tab__item tab__item--custom tab__item--custom-${tab} ${\n\t\t\t\t\t\tcurrentTab === tab ? 'tab__item--active' : ''\n\t\t\t\t\t}`}\n\t\t\t\t\trole=\"tab\"\n\t\t\t\t>\n\t\t\t\t\t{tab}\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t);\n}\n\nexport default Tabs;\n","import React, { useContext } from 'react';\nimport { Plus } from 'react-feather';\nimport { setIsModalOpen } from '../../actions/ui';\nimport { UiContext } from '../../context/UiContext';\nimport Wrapper from '../layout/Wrapper';\nimport Button from './Button';\nimport Tabs from './Tabs';\n\nfunction Navbar() {\n\tconst { uiState, uiDispatch } = useContext(UiContext);\n\n\tconst { isModalOpen } = uiState;\n\n\tconst handleAddNote = () => {\n\t\tuiDispatch(setIsModalOpen(isModalOpen));\n\t};\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<nav className=\"navbar\">\n\t\t\t\t<Tabs />\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\ttextTransform=\"uppercase\"\n\t\t\t\t\tonClick={handleAddNote}\n\t\t\t\t>\n\t\t\t\t\t<Plus size={24} color=\"currentColor\" />\n\t\t\t\t\tAdd Note\n\t\t\t\t</Button>\n\t\t\t</nav>\n\t\t</Wrapper>\n\t);\n}\n\nexport default Navbar;\n","import React, { useContext } from 'react';\nimport { setActiveNote } from '../../actions/note';\nimport { setIsModalOpen } from '../../actions/ui';\nimport { NoteContext } from '../../context/NoteContext';\nimport { UiContext } from '../../context/UiContext';\nimport Wrapper from '../layout/Wrapper';\n\nfunction Modal(props) {\n\tconst { uiState, uiDispatch } = useContext(UiContext);\n\tconst { notesState, notesDispatch } = useContext(NoteContext);\n\n\tconst { isModalOpen } = uiState;\n\tconst { activeNote } = notesState;\n\n\tconst { open, children } = props;\n\n\tconst closeModal = () => {\n\t\tuiDispatch(setIsModalOpen(isModalOpen));\n\t\tif (activeNote) {\n\t\t\tnotesDispatch(setActiveNote());\n\t\t}\n\t};\n\n\tconst handleClose = (e) => {\n\t\tif (e.target.classList.contains('modal__root')) {\n\t\t\tcloseModal();\n\t\t}\n\t};\n\n\treturn (\n\t\topen && (\n\t\t\t<div className=\"modal__root\" role=\"dialog\" onClick={handleClose}>\n\t\t\t\t<Wrapper>\n\t\t\t\t\t<div className=\"modal\">{children}</div>\n\t\t\t\t</Wrapper>\n\t\t\t</div>\n\t\t)\n\t);\n}\n\nexport default Modal;\n","import React from 'react';\n\nconst responsive = ({ xs, sm, md, lg, span }) => {\n\tconst breakpoints = [];\n\tif (xs) {\n\t\tbreakpoints.push(`col-xs--${xs}`);\n\t}\n\n\tif (sm) {\n\t\tbreakpoints.push(`col-sm--${sm}`);\n\t}\n\n\tif (md) {\n\t\tbreakpoints.push(`col-md--${md}`);\n\t}\n\n\tif (lg) {\n\t\tbreakpoints.push(`col-lg--${lg}`);\n\t}\n\n\tif (span) {\n\t\tbreakpoints.push(`col--${span}`);\n\t}\n\n\t// Convirte el arreglo a un string de clases y luego reemplaza las comas por espacios para separar el nombre de las clases\n\treturn breakpoints.toString().replaceAll(',', ' ');\n};\n\nfunction Col({ children, span, xs, sm, md, lg }) {\n\tconst breakpoints = responsive({ span, xs, sm, md, lg });\n\n\treturn <div className={breakpoints}>{children}</div>;\n}\n\nexport default Col;\n","const months = [\n\t'Jan',\n\t'Feb',\n\t'Mar',\n\t'Apr',\n\t'May',\n\t'Jun',\n\t'Jul',\n\t'Aug',\n\t'Sep',\n\t'Oct',\n\t'Nov',\n\t'Dec',\n];\n\nexport const formatDate = () => {\n\tconst date = new Date();\n\tconst month = months[date.getMonth()];\n\tconst day = date.getDate();\n\tconst year = date.getFullYear();\n\treturn `${month} ${day < 10 ? '0' + day : day}, ${year}`;\n};\n","import React from 'react';\n\nfunction Checkbox({ label, onChange, checked }) {\n\treturn (\n\t\t<label className=\"checkbox\">\n\t\t\t<span className=\"checkbox__input\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tname=\"checkbox\"\n\t\t\t\t\tchecked={checked}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t/>\n\t\t\t\t<span className=\"checkbox__control\">\n\t\t\t\t\t<svg\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\tfocusable=\"false\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\tstrokeWidth=\"3\"\n\t\t\t\t\t\t\td=\"M1.73 12.91l6.37 6.37L22.79 4.59\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</svg>\n\t\t\t\t</span>\n\t\t\t</span>\n\t\t\t{label && <span className=\"radio__label\">{label}</span>}\n\t\t</label>\n\t);\n}\n\nexport default Checkbox;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { NoteContext } from '../../context/NoteContext';\nimport {\n\tdeleteNote,\n\tsetActiveNote,\n\tsetDisplayedNotes,\n} from '../../actions/note';\nimport { UiContext } from '../../context/UiContext';\n\nfunction Popup({ setPopupShowing }) {\n\tconst { notesState, notesDispatch } = useContext(NoteContext);\n\tconst { uiState } = useContext(UiContext);\n\n\tconst { activeNote } = notesState;\n\n\tconst handleDelete = () => {\n\t\tnotesDispatch(deleteNote(activeNote.id));\n\t\tnotesDispatch(setDisplayedNotes(uiState.currentTab));\n\t\tnotesDispatch(setActiveNote());\n\t};\n\n\treturn (\n\t\t<div className=\"popup__root\">\n\t\t\t<div className=\"popup\" role=\"dialog\">\n\t\t\t\t<h4 className=\"popup__text\">Delete note?</h4>\n\t\t\t\t<div className=\"popup__footer\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn btn--text\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tnotesDispatch(setActiveNote());\n\t\t\t\t\t\t\tsetPopupShowing(false);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className=\"btn btn--text\" onClick={handleDelete}>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nPopup.propTypes = {\n\tsetPopupShowing: PropTypes.func.isRequired,\n};\n\nexport default Popup;\n","import React, { useContext, useState } from 'react';\nimport { Edit2, Trash } from 'react-feather';\nimport { UiContext } from '../../context/UiContext';\nimport { NoteContext } from '../../context/NoteContext';\nimport { formatDate } from '../../helpers/formatDate';\nimport Checkbox from '../ui/Checkbox';\nimport Popup from '../ui/Popup';\nimport { setIsModalOpen } from '../../actions/ui';\nimport { completeNote, setActiveNote } from '../../actions/note';\n\nfunction Note({ id, title, description, category, completed, updatedAt }) {\n\tconst { uiState, uiDispatch } = useContext(UiContext);\n\tconst { notesDispatch } = useContext(NoteContext);\n\n\tconst [isPopupShowing, setPopupShowing] = useState(false);\n\n\tconst handleComplete = ({ target }) => {\n\t\tconst completed = target.checked;\n\t\tconst updatedAt = formatDate();\n\n\t\t// Actualizar notas\n\t\tnotesDispatch(completeNote({ id, completed, updatedAt }));\n\n\t\t// setDisplayedNotes((prevNotes) => {\n\t\t// \treturn completeNotes(prevNotes, { id, completed, updatedAt });\n\t\t// });\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`note note--${category} ${\n\t\t\t\tcompleted ? 'note--completed' : ''\n\t\t\t}`}\n\t\t\tdata-id={id}\n\t\t>\n\t\t\t<div className=\"note__header\">\n\t\t\t\t<Checkbox\n\t\t\t\t\tonChange={handleComplete}\n\t\t\t\t\tcompleted={completed}\n\t\t\t\t\tchecked={completed}\n\t\t\t\t/>\n\t\t\t\t<h2 className=\"note__title\">{title}</h2>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"note__btn\"\n\t\t\t\t\ttitle=\"Edit Note\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tnotesDispatch(setActiveNote(id));\n\t\t\t\t\t\tuiDispatch(setIsModalOpen(uiState.isModalOpen));\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Edit2 size={20} color=\"currentColor\" />\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"note__btn\"\n\t\t\t\t\ttitle=\"Delete Note\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t// Coloca activa la nota para que en el popup se puede identificarla\n\t\t\t\t\t\tnotesDispatch(setActiveNote(id));\n\t\t\t\t\t\tsetPopupShowing(true);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Trash size={20} color=\"currentColor\" />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<p className=\"note__description\">{description}</p>\n\t\t\t<div className=\"note__footer\">\n\t\t\t\t<span>{updatedAt}</span>\n\t\t\t</div>\n\t\t\t{isPopupShowing && <Popup setPopupShowing={setPopupShowing} />}\n\t\t</div>\n\t);\n}\n\nexport default Note;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '../layout/Grid';\nimport Col from '../layout/Col';\nimport Note from './Note';\n\nfunction NotesGrid({ notes }) {\n\treturn (\n\t\t<div className=\"notes__grid\">\n\t\t\t<Grid stretch={true}>\n\t\t\t\t{notes.map((note) => (\n\t\t\t\t\t<Col key={note.id} xs={12} sm={6}>\n\t\t\t\t\t\t<Note {...note} />\n\t\t\t\t\t</Col>\n\t\t\t\t))}\n\t\t\t</Grid>\n\t\t</div>\n\t);\n}\n\nNotesGrid.propTypes = {\n\tnotes: PropTypes.array.isRequired,\n};\n\nexport default NotesGrid;\n","import React from 'react';\n\nfunction ProgressBar({ progress }) {\n\treturn (\n\t\t<div className=\"progress-bar\">\n\t\t\t<div\n\t\t\t\tclassName=\"progress-bar__progress\"\n\t\t\t\tstyle={{ width: progress + '%' }}\n\t\t\t></div>\n\t\t</div>\n\t);\n}\n\nexport default ProgressBar;\n","import React from 'react';\n\nconst imgsPath = {\n\tnoNotes: '/notes-app/img/add-note-illustration.svg',\n\tnoFilterNotes: '/notes-app/img/search-image.svg',\n};\n\nfunction AnyNotes({ title, type }) {\n\tconst imgPath = imgsPath[type];\n\treturn (\n\t\t<div className=\"notes__any\">\n\t\t\t<h1 className=\"heading-1 text-center\">{title}</h1>\n\t\t\t<img\n\t\t\t\tsrc={imgPath}\n\t\t\t\talt={title}\n\t\t\t\twidth=\"259\"\n\t\t\t\tclassName=\"img-center\"\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default AnyNotes;\n","import React from 'react';\n\nfunction Input(props) {\n\tconst { placeholder, type, value, name, setNote, autoFocus } = props;\n\treturn (\n\t\t<div className=\"form__group\">\n\t\t\t<input\n\t\t\t\ttype={type}\n\t\t\t\tclassName=\"form__control\"\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\taria-label={placeholder}\n\t\t\t\tautoFocus={autoFocus}\n\t\t\t\ttabIndex=\"1\"\n\t\t\t\tname={name}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={({ target }) =>\n\t\t\t\t\tsetNote((prevNote) => ({\n\t\t\t\t\t\t...prevNote,\n\t\t\t\t\t\t[name]: target.value,\n\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default Input;\n","import React, { useRef, useState } from 'react';\n\nfunction Select(props) {\n\tconst { options, selectHeader, setNote, value, name } = props;\n\n\tconst [selectOption, setSelectOption] = useState({\n\t\tvalue,\n\t\ttext: selectHeader,\n\t});\n\n\tconst { text } = selectOption;\n\n\tconst selectRef = useRef();\n\n\tconst toggleSelect = () => {\n\t\tselectRef.current.classList.toggle('open');\n\t};\n\n\tconst handleSelectChange = (value, text) => {\n\t\tselectRef.current.classList.remove('open');\n\t\tsetSelectOption({ value, text });\n\t\tsetNote((prevNote) => ({ ...prevNote, [name]: value }));\n\t};\n\n\treturn (\n\t\t<div className=\"form__control select\" ref={selectRef}>\n\t\t\t<div\n\t\t\t\tclassName=\"select__header\"\n\t\t\t\tonClick={toggleSelect}\n\t\t\t\ttabIndex=\"2\"\n\t\t\t\tonBlur={() => {\n\t\t\t\t\tselectRef.current.classList.remove('open');\n\t\t\t\t}}\n\t\t\t\tonKeyPress={(e) => {\n\t\t\t\t\tif (e.key === 'Enter') {\n\t\t\t\t\t\ttoggleSelect();\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{text}\n\t\t\t\t<span className=\"select__arrow\">&#9660;</span>\n\t\t\t</div>\n\t\t\t<ul className=\"select__list hide\">\n\t\t\t\t{options.map(({ text, value }) => (\n\t\t\t\t\t<li\n\t\t\t\t\t\tdata-value={value}\n\t\t\t\t\t\tclassName=\"select__item\"\n\t\t\t\t\t\tkey={value}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\thandleSelectChange(value, text);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{text}\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n\nexport default Select;\n","import React from 'react';\n\nfunction TextArea(props) {\n\tconst { placeholder, value, name, setNote } = props;\n\treturn (\n\t\t<div className=\"form__group\">\n\t\t\t<textarea\n\t\t\t\tclassName=\"form__control form__control--multiline\"\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\taria-label={placeholder}\n\t\t\t\ttabIndex=\"3\"\n\t\t\t\tname={name}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={({ target }) =>\n\t\t\t\t\tsetNote((prevNote) => ({\n\t\t\t\t\t\t...prevNote,\n\t\t\t\t\t\t[name]: target.value,\n\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t></textarea>\n\t\t</div>\n\t);\n}\n\nexport default TextArea;\n","import React, { useState, useContext } from 'react';\nimport { nanoid } from 'nanoid';\nimport { UiContext } from '../../context/UiContext';\nimport { NoteContext } from '../../context/NoteContext';\nimport { formatDate } from '../../helpers/formatDate';\nimport Grid from '../layout/Grid';\nimport Col from '../layout/Col';\nimport Input from '../ui/Input';\nimport Select from '../ui/Select';\nimport TextArea from '../ui/TextArea';\nimport { setIsModalOpen } from '../../actions/ui';\nimport {\n\taddNote,\n\tsetActiveNote,\n\tsetDisplayedNotes,\n\tupdateNote,\n} from '../../actions/note';\n\nconst initialNote = {\n\ttitle: '',\n\tcategory: '',\n\tdescription: '',\n};\n\nfunction NoteForm() {\n\tconst { uiState, uiDispatch } = useContext(UiContext);\n\tconst { notesState, notesDispatch } = useContext(NoteContext);\n\tconst { activeNote } = notesState;\n\tconst [note, setNote] = useState(activeNote || initialNote);\n\tconst { title, category, description } = note;\n\n\tconst closeModal = () => {\n\t\tuiDispatch(setIsModalOpen(uiState.isModalOpen));\n\t\tif (activeNote) {\n\t\t\tnotesDispatch(setActiveNote());\n\t\t}\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif (!title.trim() || !description.trim() || !category.trim()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = nanoid();\n\t\tconst updatedAt = formatDate();\n\n\t\t// Actualiza las notas\n\t\tif (activeNote) {\n\t\t\tnotesDispatch(\n\t\t\t\tupdateNote({\n\t\t\t\t\t...activeNote,\n\t\t\t\t\ttitle,\n\t\t\t\t\tcategory,\n\t\t\t\t\tdescription,\n\t\t\t\t\tupdatedAt,\n\t\t\t\t})\n\t\t\t);\n\t\t} else {\n\t\t\t// Agrega la nueva nota\n\t\t\tnotesDispatch(\n\t\t\t\taddNote({\n\t\t\t\t\tid,\n\t\t\t\t\ttitle,\n\t\t\t\t\tcategory,\n\t\t\t\t\tdescription,\n\t\t\t\t\tcompleted: false,\n\t\t\t\t\tupdatedAt,\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\t// // Si estamos en la pestaña de todas las notas. También actualice ese estado\n\t\tif (uiState.currentTab === 'all') {\n\t\t\tnotesDispatch(setDisplayedNotes(uiState.currentTab));\n\t\t}\n\n\t\t// Limpia el estado\n\t\tsetNote(initialNote);\n\t\tnotesDispatch(setActiveNote(null));\n\n\t\t// Oculta el modal\n\t\tcloseModal();\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit} autoComplete=\"off\">\n\t\t\t<Grid>\n\t\t\t\t<Col xs={12} sm={6} lg={8}>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\tsetNote={setNote}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Add title...\"\n\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<Col xs={12} sm={6} lg={4}>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tselectHeader={category ? category : 'Select Category'}\n\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t{ text: 'Home', value: 'home' },\n\t\t\t\t\t\t\t{ text: 'Work', value: 'work' },\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttext: 'Personal',\n\t\t\t\t\t\t\t\tvalue: 'personal',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tname=\"category\"\n\t\t\t\t\t\tvalue={category}\n\t\t\t\t\t\tsetNote={setNote}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<Col xs={12} lg={8}>\n\t\t\t\t\t<TextArea\n\t\t\t\t\t\tplaceholder=\"Add description...\"\n\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\tvalue={description}\n\t\t\t\t\t\tsetNote={setNote}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Grid>\n\t\t\t<div className=\"modal__footer\">\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclassName=\"btn btn--text\"\n\t\t\t\t\tonClick={closeModal}\n\t\t\t\t>\n\t\t\t\t\tCancel\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"btn btn--text\"\n\t\t\t\t\t// onClick={() => onConfirm()}\n\t\t\t\t>\n\t\t\t\t\t{activeNote ? 'Update' : 'Add'}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n}\n\nexport default NoteForm;\n","import React, { useContext } from 'react';\nimport { UiContext } from '../../context/UiContext';\nimport Modal from '../ui/Modal';\nimport Wrapper from '../layout/Wrapper';\nimport NotesGrid from './NotesGrid';\nimport ProgressBar from '../ui/ProgressBar';\nimport AnyNotes from './AnyNotes';\nimport NoteForm from './NoteForm';\nimport { NoteContext } from '../../context/NoteContext';\n\nfunction Notes() {\n\tconst {\n\t\tuiState: { isModalOpen },\n\t} = useContext(UiContext);\n\n\tconst { notesState } = useContext(NoteContext);\n\n\tconst { notes, displayedNotes, completedNotes } = notesState;\n\n\tconst totalNotes = notes.length;\n\n\tconst areNotes = totalNotes > 0;\n\tconst areDisplayedNotes = displayedNotes.length > 0;\n\n\treturn (\n\t\t<main className=\"notes\">\n\t\t\t<Wrapper>\n\t\t\t\t{!areNotes && (\n\t\t\t\t\t<AnyNotes title=\"You don't have any notes\" type=\"noNotes\" />\n\t\t\t\t)}\n\t\t\t\t{/* Si hay notas pero no las filtradas muestra el mensaje  */}\n\t\t\t\t{!areDisplayedNotes && areNotes ? (\n\t\t\t\t\t<AnyNotes\n\t\t\t\t\t\ttitle=\"Couldn't find any notes\"\n\t\t\t\t\t\ttype=\"noFilterNotes\"\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t\t{areDisplayedNotes && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<h1 className=\"heading-1 heading-1--notes\">\n\t\t\t\t\t\t\t{completedNotes === totalNotes\n\t\t\t\t\t\t\t\t? 'You have completed all notes'\n\t\t\t\t\t\t\t\t: `You have ${completedNotes}/${totalNotes} ${\n\t\t\t\t\t\t\t\t\t\ttotalNotes > 1 ? 'notes ' : 'note '\n\t\t\t\t\t\t\t\t  } completed`}\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t<ProgressBar\n\t\t\t\t\t\t\tprogress={(completedNotes / totalNotes) * 100}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<NotesGrid notes={displayedNotes} />\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t\t<Modal\n\t\t\t\t\topen={isModalOpen}\n\t\t\t\t\tconfirmBtn={true}\n\t\t\t\t\tcancelBtn={true}\n\t\t\t\t\tconfirmBtnText=\"Add\"\n\t\t\t\t>\n\t\t\t\t\t<h2 className=\"heading-2 mt-0\">Add Note</h2>\n\t\t\t\t\t<NoteForm />\n\t\t\t\t</Modal>\n\t\t\t</Wrapper>\n\t\t</main>\n\t);\n}\n\nexport default Notes;\n","import React from 'react';\nimport { NoteProvider } from '../context/NoteContext';\nimport Header from '../components/layout/Header';\nimport Navbar from '../components/ui/Navbar';\nimport Notes from '../components/notes/Notes';\n\nfunction NotesPage() {\n\treturn (\n\t\t<NoteProvider>\n\t\t\t<Header />\n\t\t\t<Navbar />\n\t\t\t<Notes />\n\t\t</NoteProvider>\n\t);\n}\n\nexport default NotesPage;\n","import React from 'react';\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n\tRedirect,\n} from 'react-router-dom';\nimport LoginPage from '../../pages/LoginPage';\nimport RegisterPage from '../../pages/RegisterPage';\nimport NotesPage from '../../pages/NotesPage';\n\nfunction AppRouter() {\n\treturn (\n\t\t<Router basename=\"/notes-app\">\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/signin\" exact={true}>\n\t\t\t\t\t<LoginPage />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/signup\" exact={true}>\n\t\t\t\t\t<RegisterPage />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/\" exact={true}>\n\t\t\t\t\t<NotesPage />\n\t\t\t\t</Route>\n\t\t\t\t<Redirect to=\"/signin\" />\n\t\t\t</Switch>\n\t\t\t{/* <div>\n    </div> */}\n\t\t</Router>\n\t);\n}\n\nexport default AppRouter;\n","import React from 'react';\nimport AppRouter from './components/routers/AppRouter';\nimport { UiProvider } from './context/UiContext';\n\nfunction App() {\n\treturn (\n\t\t<>\n\t\t\t<UiProvider>\n\t\t\t\t<AppRouter />\n\t\t\t</UiProvider>\n\t\t</>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}